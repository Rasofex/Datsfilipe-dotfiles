#!/usr/bin/env bash

# Function to set the theme
set_theme() {
  theme=$1

  # Set the theme variable in the theme.conf file, it's a fish global var, it's 'set -gx THEME tokyonight'
  awk -i inplace -v theme="$theme" '
    $1 == "set" && $2 == "-gx" && $3 == "THEME" { $4 = theme; print; next }
    { print }
  ' ~/.config/fish/theme.conf

  # Update the colors setting in the Alacritty configuration file
  awk -i inplace -v theme="$theme" '
    /colors:/ { $2 = "*" theme; print; next }
    { print }
  ' ~/.config/alacritty/alacritty.yml
  
  # I3 configuration file
  cat ~/.config/i3/conf.d/*.config "$HOME/.config/i3/conf.d/themes/$theme.config" > "$HOME/.config/i3/config"
  
  # Update tmux theme
  tmux source-file "$HOME/.config/tmux/themes/$theme.conf"

  # Update neovim theme variable
  awk -i inplace -v theme="$theme" '
    /^vim.g.THEME/ { $3 = "\"" theme "\""; print; next }
    { print }
  ' ~/.config/nvim/init.lua

  # Update styles for peco
  style=$(jq '.Style' "$HOME/.config/peco/themes/$theme.json")
  jq --argjson style "$style" '.Style = $style' "$HOME/.config/peco/config.json" > "$HOME/.config/peco/tmp.json"
  mv "$HOME/.config/peco/tmp.json" "$HOME/.config/peco/config.json"

  # Restart i3
  i3-msg restart
}

# Read the current theme from the theme.conf file
current_theme=$(awk '/^set -gx THEME/ { print $4 }' ~/.config/fish/theme.conf)

# Check if a theme was specified as an argument
if [ $# -eq 0 ]; then
  # No theme specified, print the current theme
  echo "Current theme: $current_theme"
else
  # Theme specified, switch to the new theme
  set_theme "$1"
fi
